;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(slime-minibuffer-history buffer-name-history yes-or-no-p-history read-expression-history command-history empty-history read-number-history minibuffer-history minibuffer-history-search-history evil-ex-history file-name-history extended-command-history))
(setq slime-minibuffer-history '("q"))
(setq buffer-name-history '("init.el" "*GNU Emacs*" "init.el" "*scratch*" "*Messages*" "*scratch*" "*Messages*" "*scheme*" "sicp.scm" "*Messages*" "*vterm*" "sicp.scm" "*vterm*" "sicp.scm" "*vterm*" "sicp.scm" "*Messages*"))
(setq yes-or-no-p-history '("yes" "es" "yes"))
(setq read-expression-history '("q"))
(setq command-history '((evil-change 1880 1882 'exclusive nil nil) (find-file "~/.config/emacs/init.el" t) (find-file "~/.config/emacs/init.el" t) (evil-change 2512 2514 'exclusive nil nil) (evil-change 2519 2521 'exclusive nil nil) (evil-change 2519 2521 'exclusive nil nil) (customize-group "doom-modeline") (execute-extended-command nil "customize-group" "cu") (customize-group "doom-modeline") (execute-extended-command nil "customize-group" "customize") (find-file "~/.config/emacs/init.el" t) (evil-change 2738 2741 'exclusive nil nil) (evil-change 2644 2647 'exclusive nil nil) (find-file "~/.config/emacs/init.el" t) (evil-change 2738 2740 'exclusive nil nil) (evil-change 2644 2646 'exclusive nil nil) (find-file "~/.config/emacs/init.el" t) (evil-change 2737 2739 'exclusive nil nil) (evil-change 2644 2646 'exclusive nil nil) (find-file "~/.config/emacs/init.el" t) (evil-change 2737 2739 'exclusive nil nil) (evil-change 2644 2646 'exclusive nil nil) (find-file "~/.config/emacs/init.el" t) (evil-change 2644 2647 'exclusive nil nil) (evil-change 2738 2741 'exclusive nil nil) (evil-change 2738 2740 'exclusive nil nil) (evil-change 2644 2646 'exclusive nil nil) (evil-change 2644 2646 'exclusive nil nil) (find-file "~/.config/emacs/init.el" t) (evil-set-marker 106) (evil-change 2701 2710 'exclusive nil nil) (evil-change 2608 2617 'exclusive nil nil) (evil-find-char nil 78) (find-file "~/.config/emacs/init.el" t) (evil-change 2703 2705 'exclusive nil nil) (evil-change 2627 2629 'exclusive nil nil) (find-file "~/.config/emacs/init.el" t) (evil-change 2703 2706 'exclusive nil nil) (evil-change 2706 2707 'exclusive nil nil) (evil-change 2627 2630 'exclusive nil nil) (find-file "~/.config/emacs/init.el" t) (find-file "~/Practice/Scheme/sicp.scm" t) (package-install 'doom-modeline nil) (execute-extended-command nil "package-install" "pac") (find-file "~/.config/emacs/init.el" t) (package-install 'all-the-icons nil) (execute-extended-command nil "package-install" "pac") (execute-extended-command nil "package-install" nil) (execute-extended-command nil "package-install" "pac") (execute-extended-command nil "package-install" "pack") (run-scheme "scheme") (execute-extended-command nil "run-scheme" "run") (evil-delete 3240 3241 'line nil nil) (find-file "~/Practice/Scheme/sicp.scm" t) (visual-line-mode 'toggle) (execute-extended-command nil "visual-line-mode" "vi") (visual-line-mode 'toggle) (execute-extended-command nil "visual-line-mode" "vi") (visual-line-mode 'toggle) (execute-extended-command nil "visual-line-mode" "vis") (visual-line-mode 'toggle) (execute-extended-command nil "visual-line-mode" "visual") (find-file "~/.config/emacs/init.el" t) (toggle-truncate-lines nil) (execute-extended-command nil "toggle-truncate-lines" "to") (find-file "~/Practice/Scheme/sicp.scm" t) (evil-find-char nil 102) (find-file "~/Practice/Scheme/sicp.scm" t) (find-file "~/.config/emacs/init.el" t) (toggle-truncate-lines nil) (execute-extended-command nil "toggle-truncate-lines" "to") (find-file "~/Practice/Scheme/sicp.scm" t) (find-file "~/.config/emacs/init.el" t) (toggle-truncate-lines nil) (execute-extended-command nil "toggle-truncate-lines" "tog") (find-file "~/Practice/Scheme/sicp.scm" t) (other-frame 1) (execute-extended-command nil "other-frame" "other-fra") (other-window 1 nil 1) (execute-extended-command nil "other-window" "other") (toggle-truncate-lines nil) (execute-extended-command nil "toggle-truncate-lines" nil) (evil-delete 3139 3140 'line nil nil) (toggle-truncate-lines nil) (execute-extended-command nil "toggle-truncate-lines" nil) (toggle-truncate-lines nil) (execute-extended-command nil "toggle-truncate-lines" nil) (toggle-truncate-lines nil) (execute-extended-command nil "toggle-truncate-lines" "tog") (other-window 1 nil 1) (execute-extended-command nil "other-window" "other") (find-file "~/.config/emacs/init.el" t) (find-file "~/Practice/Scheme/sicp.scm" t) (evil-find-char nil 102) (evil-find-char nil 102) (evil-find-char nil 102) (evil-find-char nil 102) (evil-find-char nil 102) (evil-find-char nil 102) (evil-find-char nil 102)))
(setq minibuffer-history '("doom-modeline" "all-the-icons" "evil-leader" "evil-collection" "slime" "org-bullets" "orgit" "vterm" "aggressive-indent" "doom-themes" "tree-sitter-langs" "tree-sitter" "rainbow-delimiters" "darcula-theme" "paredit" "rainbow-delimiters" "smartparens"))
(setq evil-ex-history '(#("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("e sicp..scm" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("e sicp.scm" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("e sicp." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7))))
(setq file-name-history '("~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/Downloads/Repo/dotfiles/.config/emacs/" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/C/hello.c" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Common_Lisp/test.lisp" "~/.config/emacs/init.el" "~/Practice/Common_Lisp/test.lisp" "~/Practice/Common_Lisp/" "~/.config/emacs/init.el" "~/Practice/Common_Lisp/test.lisp" "~/Practice/Common_Lisp/" "~/Practice/Haskell/helloworld.hs" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Documents/Journal/Journal.org" "~/Downloads/Repo/dotfiles/.config/emacs/init.el" "~/.config/emacs/init.el" "~/Documents/Journal/Journal.org" "~/.config/emacs/init.el" "~/Practice/C/hello.c" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/" "~/Practice/Scheme/" "~/.config/emacs/" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/Practice/Scheme/s" "~/.config/emacs/init.el" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/" "~/Practice/Scheme/sicp.scm" "~/.config/emacs/init.el" "~/.config/emacs/" "~/Practice/Scheme/" "~/.config/emacs/" "~/Practice/Scheme/"))
(setq extended-command-history '("customize-group" "package-install" "run-scheme" "visual-line-mode" "toggle-truncate-lines" "other-frame" "other-window" "toggle-truncate-lines" "other-window" "vertico-directory-enter" "vertico-buffer-mode" "ido-wide-find-file" "ido-display-buffer-other-frame" "ido-switch-buffer" "window-toggle-side-windows" "window-swap-states" "switch-to-buffer-other-frame" "switch-to-minibuffer" "toggle-truncate-lines" "package-install" "vertico-buffer-mode" "toggle-truncate-lines" "run-scheme" "line-number-mode" "run-scheme" "vterm" "version" "line-number-mode" "vterm" "package-install" "toggle-truncate-lines" "slime" "package-install" "run-scheme" "load-file" "package-install" "run-scheme" "toggle-truncate-lines" "run-scheme" "package-install" "tree-sitter-mode" "package-install" "customize-group" "package-install" "customize-group" "package-install" "smartparens-mode" "package-install" "run-scheme" "package-install" "cd" "run-scheme" "cd"))
(setq evil-jumps-history '((21 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3330 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1637 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (2431 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (6447 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3722 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (2608 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3656 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3499 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1 "/home/paolo/Practice/Scheme/sicp.scm") (3240 "/home/paolo/Practice/Scheme/sicp.scm") (3073 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (874 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (2825 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3093 "/home/paolo/Practice/Scheme/sicp.scm") (3487 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1791 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1818 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3069 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3167 "/home/paolo/Practice/Scheme/sicp.scm") (3203 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3067 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3069 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1934 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1911 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1886 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1792 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3143 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3142 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (492 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (3120 "/home/paolo/Practice/Scheme/sicp.scm") (3219 "/home/paolo/Practice/Scheme/sicp.scm") (3092 "/home/paolo/Practice/Scheme/sicp.scm") (3067 "/home/paolo/Practice/Scheme/sicp.scm") (3299 "/home/paolo/Practice/Scheme/sicp.scm") (3109 "/home/paolo/Practice/Scheme/sicp.scm") (3094 "/home/paolo/Practice/Scheme/sicp.scm") (380 "/home/paolo/Practice/C/hello.c") (389 "/home/paolo/Practice/C/hello.c") (389 "/home/paolo/Practice/C/hello.c") (368 "/home/paolo/Practice/C/hello.c") (79 "/home/paolo/Practice/C/hello.c") (101 "/home/paolo/Practice/C/hello.c") (20 "/home/paolo/Practice/C/hello.c") (54 "/home/paolo/Practice/C/hello.c") (3065 "/home/paolo/Practice/Scheme/sicp.scm") (20 "/home/paolo/Practice/Scheme/sicp.scm") (1751 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1 "/home/paolo/Practice/Scheme/sicp.scm") (15 "/home/paolo/Practice/Haskell/helloworld.hs") (3098 "/home/paolo/Practice/Scheme/sicp.scm") (2038 "/home/paolo/Practice/Scheme/sicp.scm") (2005 "/home/paolo/Practice/Scheme/sicp.scm") (2005 "/home/paolo/Practice/Scheme/sicp.scm") (1 "/home/paolo/Practice/Scheme/sicp.scm") (1 "/home/paolo/Practice/Scheme/sicp.scm") (5798 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (35045 "/home/paolo/Documents/Journal/Journal.org") (5798 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1 "/home/paolo/Practice/Scheme/sicp.scm") (5798 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (35045 "/home/paolo/Documents/Journal/Journal.org") (5798 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1 "/home/paolo/Practice/Scheme/sicp.scm") (5798 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1 "/home/paolo/Practice/Scheme/sicp.scm") (1 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (19 "/home/paolo/Documents/Journal/Journal.org") (37909 "/home/paolo/Documents/Journal/Journal.org") (18 "/home/paolo/Documents/Journal/Journal.org") (1544 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (35020 "/home/paolo/Documents/Journal/Journal.org") (1 "/home/paolo/Documents/Journal/Journal.org") (1239 "/home/paolo/Documents/Journal/Journal.org") (19 "/home/paolo/Documents/Journal/Journal.org") (97 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (21 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (5807 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (4905 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (1 "/home/paolo/Downloads/Repo/dotfiles/.config/emacs/init.el") (2978 "/home/paolo/Practice/Scheme/sicp.scm") (2581 "/home/paolo/Practice/Scheme/sicp.scm") (2647 "/home/paolo/Practice/Scheme/sicp.scm") (32 "/home/paolo/Practice/Scheme/sicp.scm") (1 "/home/paolo/Practice/Scheme/sicp.scm") (771 "/home/paolo/.config/emacs/init.el") (759 "/home/paolo/.config/emacs/init.el") (772 "/home/paolo/.config/emacs/init.el") (743 "/home/paolo/.config/emacs/init.el") (4052 "/home/paolo/.config/emacs/init.el") (873 "/home/paolo/.config/emacs/init.el") (809 "/home/paolo/.config/emacs/init.el") (772 "/home/paolo/.config/emacs/init.el") (743 "/home/paolo/.config/emacs/init.el") (4052 "/home/paolo/.config/emacs/init.el") (873 "/home/paolo/.config/emacs/init.el") (809 "/home/paolo/.config/emacs/init.el")))
